name: Publish to PyPI

on:
  push:
    tags:
      - 'v*'

jobs:
  test:
    runs-on: ubuntu-22.04
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"
    
    - name: Install Poetry
      uses: snok/install-poetry@v1
      with:
        version: latest
        virtualenvs-create: true
        virtualenvs-in-project: true
    
    - name: Load cached venv
      id: cached-poetry-dependencies
      uses: actions/cache@v3
      with:
        path: .venv
        key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}
    
    - name: Install dependencies
      if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
      run: poetry install --no-interaction --no-root
    
    - name: Install project
      run: poetry install --no-interaction
    
    - name: Start Redis
      run: |
        cd tests/unit
        docker compose -f docker-compose.redis.yml up -d
    
    - name: Wait for Redis to be ready
      run: |
        echo "Waiting for Redis to be ready..."
        for i in {1..30}; do
          if docker exec $(docker ps -q --filter "name=redis") redis-cli ping > /dev/null 2>&1; then
            echo "Redis is ready!"
            break
          fi
          echo "Waiting for Redis... ($i/30)"
          sleep 2
        done
        
        # Verify Redis is responsive
        docker exec $(docker ps -q --filter "name=redis") redis-cli ping
    
    - name: Run tests
      run: |
        poetry run pytest
    
    - name: Stop Redis
      if: always()
      run: |
        cd tests/unit
        docker compose -f docker-compose.redis.yml down

  publish:
    needs: test
    runs-on: ubuntu-22.04
    permissions:
      id-token: write  # Required for trusted publishing
      contents: read
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"
    
    - name: Install Poetry
      uses: snok/install-poetry@v1
      with:
        version: latest
        virtualenvs-create: true
        virtualenvs-in-project: true
    
    - name: Load cached venv
      id: cached-poetry-dependencies
      uses: actions/cache@v3
      with:
        path: .venv
        key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}
    
    - name: Install dependencies
      if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
      run: poetry install --no-interaction --no-root
    
    - name: Install project
      run: poetry install --no-interaction
    
    - name: Build package
      run: |
        poetry build
    
    - name: Publish to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        password: ${{ secrets.PYPI_API_TOKEN }}
        packages-dir: dist/